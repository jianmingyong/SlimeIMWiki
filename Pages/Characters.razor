@page "/characters"

@implements IAsyncDisposable

@inject DataModel DataModel
@inject IJSRuntime JsRuntime

<Alert Color="Color.Danger" Visible="true">
    <AlertDescription>
        Please be aware that some characters may contain outdated information.
    </AlertDescription>
</Alert>

<CustomDivider Text="FILTERS" Margin="Margin.Is2.OnY"/>

<Div>Something here</Div>

<CustomDivider Text="CHARACTERS" Margin="Margin.Is2.OnY"/>

<Div Flex="Flex.Wrap" Gap="Gap.Is3.OnX.Is5.OnY" Padding="Padding.Is3.OnX.Is5.FromTop.Is3.FromBottom"
     Background="Background.Body">
    @foreach (var unit in DataModel.BattleUnits)
    {
        <BattleUnit @key="unit.Permalink" Unit="unit"/>
    }

    @foreach (var unit in DataModel.ProtectionUnits.OrderByDescending(unit => unit.ReleaseDate))
    {
        <ProtectionUnit @key="unit.Permalink" Unit="unit"/>
    }
</Div>

@code
{
    private IJSObjectReference? module;

    protected override async Task OnInitializedAsync()
    {
        await DataModel.LoadDataModelAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/Characters.razor.js");
        }

        if (module is not null)
        {
            await module.InvokeVoidAsync("updateUnitIcons");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}
