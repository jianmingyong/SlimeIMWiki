@page "/characters/{permalink}"

@using BattleUnit = SlimeIMWiki.Models.BattleUnit
@using ProtectionUnit = SlimeIMWiki.Models.ProtectionUnit

@inject DataModel DataModel
@inject NavigationManager NavigationManager

<PageTitle>@GetPageTitle()</PageTitle>

<Grid>
    <Column ColumnSize="ColumnSize.Is12" Display="Display.None.OnDesktop">
        <Div Height="Height.Px(100)" Position="Position.Relative">
            <Div TextWeight="TextWeight.SemiBold" TextAlignment="TextAlignment.Center">[ @unit?.Title ]</Div>
            <Div TextWeight="TextWeight.SemiBold" TextAlignment="TextAlignment.Center">@unit?.Name</Div>

            <Div Position="Position.Relative.Start.Is50.Translate.MiddleX" Style="width: fit-content"
                 Flex="Flex.AlignItems.Center" Gap="Gap.Is1" Padding="Padding.Is2.FromTop">
                @switch (unit)
                {
                    case ProtectionUnit:
                    {
                        <Image Width="Width.Px(32)" Source="image/character_types/icCharaTypeBless.png"/>
                        <Span>Protection Unit</Span>

                        break;
                    }

                    case BattleUnit:
                    {
                        <Image Width="Width.Px(32)" Source="image/character_types/icCharaTypePc.png"/>
                        <Span>Battle Unit</Span>

                        break;
                    }
                }

                <Div Position="Position.Relative" Width="Width.Px(32 * 2.5)" Height="Height.Px(32)">
                    <Image Position="Position.Absolute" Width="Width.Px(32)"
                           Source="image/character_info/rarityStarOn.png" Style="z-index: 5"/>
                    <Image Position="Position.Absolute" Width="Width.Px(32)"
                           Source="image/character_info/rarityStarOn.png" Style="z-index: 4; left: 16px"/>
                    <Image Position="Position.Absolute" Width="Width.Px(32)"
                           Source="image/character_info/rarityStarOn.png" Style="z-index: 3; left: 32px"/>
                    @if (unit?.InitialRarity >= 4)
                    {
                        <Image Position="Position.Absolute" Width="Width.Px(32)"
                               Source="image/character_info/rarityStarOn.png" Style="z-index: 2; left: 48px"/>
                    }
                    else
                    {
                        <Image Position="Position.Absolute" Width="Width.Px(32)"
                               Source="image/character_info/rarityStarOff.png" Style="z-index: 2; left: 48px"/>
                    }

                    @if (unit?.InitialRarity >= 5)
                    {
                        <Image Position="Position.Absolute" Width="Width.Px(32)"
                               Source="image/character_info/rarityStarOn.png" Style="z-index: 1; left: 64px"/>
                    }
                    else
                    {
                        <Image Position="Position.Absolute" Width="Width.Px(32)"
                               Source="image/character_info/rarityStarOff.png" Style="z-index: 1; left: 64px"/>
                    }
                </Div>
            </Div>
        </Div>
    </Column>

    <Column ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile">
        <Div Flex="Flex.JustifyContent.Center.AlignContent.Center">
            <Image Source="@unit?.Image" Fluid/>
        </Div>
    </Column>

    <Column ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile">
        <Div Height="Height.Px(100)" Position="Position.Relative" Display="Display.None.Block.OnDesktop">
            <Image Position="Position.Absolute.Start.Is0.Top.Is0" Width="Width.Px(100)" Source="@unit?.Icon"/>

            <Div TextWeight="TextWeight.SemiBold" TextAlignment="TextAlignment.Center">[ @unit?.Title ]</Div>
            <Div TextWeight="TextWeight.SemiBold" TextAlignment="TextAlignment.Center">@unit?.Name</Div>

            <Div Position="Position.Relative.Start.Is50.Translate.MiddleX" Style="width: fit-content"
                 Flex="Flex.AlignItems.Center" Gap="Gap.Is1" Padding="Padding.Is2.FromTop">
                @switch (unit)
                {
                    case ProtectionUnit:
                    {
                        <Image Width="Width.Px(32)" Source="image/character_types/icCharaTypeBless.png"/>
                        <Span>Protection Unit</Span>

                        break;
                    }

                    case BattleUnit:
                    {
                        <Image Width="Width.Px(32)" Source="image/character_types/icCharaTypePc.png"/>
                        <Span>Battle Unit</Span>

                        break;
                    }
                }

                <Div Position="Position.Relative" Width="Width.Px(32 * 2.5)" Height="Height.Px(32)">
                    <Image Position="Position.Absolute" Width="Width.Px(32)"
                           Source="image/character_info/rarityStarOn.png" Style="z-index: 5"/>
                    <Image Position="Position.Absolute" Width="Width.Px(32)"
                           Source="image/character_info/rarityStarOn.png" Style="z-index: 4; left: 16px"/>
                    <Image Position="Position.Absolute" Width="Width.Px(32)"
                           Source="image/character_info/rarityStarOn.png" Style="z-index: 3; left: 32px"/>
                    @if (unit?.InitialRarity >= 4)
                    {
                        <Image Position="Position.Absolute" Width="Width.Px(32)"
                               Source="image/character_info/rarityStarOn.png" Style="z-index: 2; left: 48px"/>
                    }
                    else
                    {
                        <Image Position="Position.Absolute" Width="Width.Px(32)"
                               Source="image/character_info/rarityStarOff.png" Style="z-index: 2; left: 48px"/>
                    }

                    @if (unit?.InitialRarity >= 5)
                    {
                        <Image Position="Position.Absolute" Width="Width.Px(32)"
                               Source="image/character_info/rarityStarOn.png" Style="z-index: 1; left: 64px"/>
                    }
                    else
                    {
                        <Image Position="Position.Absolute" Width="Width.Px(32)"
                               Source="image/character_info/rarityStarOff.png" Style="z-index: 1; left: 64px"/>
                    }
                </Div>
            </Div>
        </Div>

        <Div Flex="Flex.Wrap" Gap="Gap.Is2">
            <Div Flex="Flex.Grow.Is1.Shrink.Is1">
                <CustomDivider Text="STATS" Margin="Margin.Is2.OnY"/>

                <Table Background="Background.Body" Width="Width.Is100" Style="min-width: fit-content">
                    <TableBody>
                        <TableRow>
                            <TableHeaderCell Background="Background.Primary" TextColor="TextColor.Body">
                                <Div Flex="Flex.Row.AlignItems.Center" Gap="Gap.Is2">
                                    <Div Flex="Flex.JustifyContent.Center" Width="Width.Px(32)" Height="Height.Px(32)">
                                        <Image Width="Width.Max100" Height="Height.Is100"
                                               Source="image/character_info/icHp.png"/>
                                    </Div>
                                    <Div>Health</Div>
                                </Div>
                            </TableHeaderCell>
                            <TableRowCell Background="Background.Dark" TextColor="TextColor.Body"
                                          TextAlignment="TextAlignment.Center" Style="min-width: 5rem">
                                @unit?.MinHealth
                            </TableRowCell>
                            <TableRowCell Background="Background.Dark" TextColor="TextColor.Body"
                                          TextAlignment="TextAlignment.Center" Style="min-width: 5rem">
                                @unit?.MaxHealth
                            </TableRowCell>
                        </TableRow>
                        <TableRow>
                            <TableHeaderCell Background="Background.Primary" TextColor="TextColor.Body">
                                <Div Flex="Flex.Row.AlignItems.Center" Gap="Gap.Is2">
                                    <Div Flex="Flex.JustifyContent.Center" Width="Width.Px(32)" Height="Height.Px(32)">
                                        <Image Width="Width.Max100" Height="Height.Is100"
                                               Source="image/character_info/icAtk.png"/>
                                    </Div>
                                    <Div>Attack</Div>
                                </Div>
                            </TableHeaderCell>
                            <TableRowCell Background="Background.Dark" TextColor="TextColor.Body"
                                          TextAlignment="TextAlignment.Center"
                                          Width="Width.Is33">
                                @unit?.MinAttack
                            </TableRowCell>
                            <TableRowCell Background="Background.Dark" TextColor="TextColor.Body"
                                          TextAlignment="TextAlignment.Center"
                                          Width="Width.Is33">
                                @unit?.MaxAttack
                            </TableRowCell>
                        </TableRow>
                        <TableRow>
                            <TableHeaderCell Background="Background.Primary" TextColor="TextColor.Body">
                                <Div Flex="Flex.Row.AlignItems.Center" Gap="Gap.Is2">
                                    <Div Flex="Flex.JustifyContent.Center" Width="Width.Px(32)" Height="Height.Px(32)">
                                        <Image Width="Width.Max100" Height="Height.Is100"
                                               Source="image/character_info/icDef.png"/>
                                    </Div>
                                    <Div>Defense</Div>
                                </Div>
                            </TableHeaderCell>
                            <TableRowCell Background="Background.Dark" TextColor="TextColor.Body"
                                          TextAlignment="TextAlignment.Center"
                                          Width="Width.Is33">
                                @unit?.MinDefense
                            </TableRowCell>
                            <TableRowCell Background="Background.Dark" TextColor="TextColor.Body"
                                          TextAlignment="TextAlignment.Center"
                                          Width="Width.Is33">
                                @unit?.MaxDefense
                            </TableRowCell>
                        </TableRow>
                        <TableRow>
                            <TableHeaderCell Background="Background.Primary" TextColor="TextColor.Body">
                                <Div Flex="Flex.Row.AlignItems.Center" Gap="Gap.Is2">
                                    <Div Flex="Flex.JustifyContent.Center" Width="Width.Px(32)" Height="Height.Px(32)">
                                        <Image Width="Width.Max100" Height="Height.Is100"
                                               Source="image/character_info/icConstruct.png"/>
                                    </Div>
                                    <Div>Output</Div>
                                </Div>
                            </TableHeaderCell>
                            <TableRowCell Background="Background.Dark" TextColor="TextColor.Body"
                                          TextAlignment="TextAlignment.Center"
                                          Width="Width.Is33">
                                @unit?.MinOutput
                            </TableRowCell>
                            <TableRowCell Background="Background.Dark" TextColor="TextColor.Body"
                                          TextAlignment="TextAlignment.Center"
                                          Width="Width.Is33">
                                @unit?.MaxOutput
                            </TableRowCell>
                        </TableRow>
                        <TableRow>
                            <TableHeaderCell Background="Background.Primary" TextColor="TextColor.Body">
                                <Div Flex="Flex.Row.AlignItems.Center" Gap="Gap.Is2">
                                    <Div Width="Width.Px(32)">
                                        <Icon IconSize="IconSize.x2" Name="IconName.Clock"/>
                                    </Div>
                                    <Div>Release</Div>
                                </Div>
                            </TableHeaderCell>
                            <TableRowCell Background="Background.Dark" TextColor="TextColor.Body"
                                          TextAlignment="TextAlignment.Center"
                                          ColumnSpan="2">
                                @unit?.ReleaseDate
                            </TableRowCell>
                        </TableRow>
                    </TableBody>
                </Table>
            </Div>

            <Div Flex="Flex.Grow.Is1.Shrink.Is1">
                <CustomDivider Text="FORCES" Margin="Margin.Is2.OnY"/>

                <Div Background="Background.Body" Padding="Padding.Is2" Flex="Flex.Column.OnDesktop.Wrap" Gap="Gap.Is2">
                    @switch (unit)
                    {
                        case ProtectionUnit { Forces: null }:
                        {
                            <Div Flex="Flex.Grow.Is1.Shrink.Is1" TextAlignment="TextAlignment.Center">
                                No forces have been assigned.
                            </Div>

                            break;
                        }

                        case ProtectionUnit protectionUnit:
                        {
                            foreach (var force in protectionUnit.Forces)
                            {
                                <Button Color="Color.Secondary" Size="Size.ExtraSmall">
                                    <Image Width="Width.Px(32)" Height="Height.Px(32)"
                                           Source="@DataModel.GetForce(force)?.Icon"/>
                                    <Span VerticalAlignment="VerticalAlignment.Middle">@force</Span>
                                </Button>
                            }

                            break;
                        }

                        case BattleUnit battleUnit:
                        {
                            foreach (var force in battleUnit.Forces)
                            {
                                <Button Color="Color.Secondary" Size="Size.ExtraSmall">
                                    <Image Width="Width.Px(32)" Height="Height.Px(32)"
                                           Source="@DataModel.GetForce(force)?.Icon"/>
                                    <Span VerticalAlignment="VerticalAlignment.Middle">@force</Span>
                                </Button>
                            }

                            break;
                        }
                    }
                </Div>
            </Div>
        </Div>

        <CustomDivider Text="TAGS" Margin="Margin.Is2.OnY"/>

        <Div Background="Background.Body" Padding="Padding.Is2" Flex="Flex.Wrap" Gap="Gap.Is2">
            There is something here.
        </Div>
    </Column>
</Grid>

@if (unit is ProtectionUnit)
{
    <Grid>
        <Column ColumnSize="ColumnSize.IsFull">
            <CustomDivider Text="DIVINE PROTECTION" Margin="Margin.Is2.OnY"/>
        </Column>
    </Grid>
}

@code
{
    [Parameter]
    public required string Permalink { get; set; }

    private ICharacterUnit? unit;

    protected override async Task OnInitializedAsync()
    {
        await DataModel.LoadDataModelAsync();

        unit = DataModel.GetUnit(Permalink);

        if (unit is null)
        {
            NavigationManager.NavigateTo("404");
        }
    }

    private string GetPageTitle()
    {
        return unit is not null ? $"{unit.Name} [{unit.Title}]" : "";
    }
}
