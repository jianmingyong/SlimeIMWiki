@using SlimeIMWiki.Services
@inject CharacterListService CharacterListService

<FilterComponent DisplayText="@Attribute.Name" IsRemoveMode="IsRemoveMode" OnClick="Execute">
    <ItemContent>
        <Image Class="filterIcon" Source="@Attribute.Icon" Width="Width.Em(1.5)" Height="Height.Em(1.5)"/>
    </ItemContent>
</FilterComponent>

@code
{
    [Parameter]
    [EditorRequired]
    public required IAttribute Attribute { get; set; }

    [Parameter]
    public bool IsRemoveMode { get; set; }

    [Parameter]
    public Filter? Filter { get; set; }

    protected override void OnInitialized()
    {
        Filter ??= new Filter(unit =>
            {
                return unit switch
                {
                    BattleUnit battleUnit => battleUnit.Attribute == Attribute.Name,
                    ProtectionUnit protectionUnit => protectionUnit.Attributes?.Contains(Attribute.Name) ?? false,
                    var _ => false
                };
            },
            @<AttributeFilter Attribute="Attribute" IsRemoveMode="true" Filter="Filter"/>);

        base.OnInitialized();
    }

    private void Execute()
    {
        Debug.Assert(Filter != null, nameof(Filter) + " != null");

        if (!IsRemoveMode)
        {
            if (!CharacterListService.Filters.Contains(Filter))
            {
                CharacterListService.Filters.Add(Filter);
            }
        }
        else
        {
            CharacterListService.Filters.Remove(Filter);
        }
    }
}